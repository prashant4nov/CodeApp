

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class Mapping
 */
@WebServlet(asyncSupported = true, name = "mapping", urlPatterns = { "/mapping" })
public class Mapping extends HttpServlet {
	private static final long serialVersionUID = 1L;


    /**
     * Default constructor. 
     */
    public Mapping() {
    	
    }



	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		String input = request.getParameter("data").toString();
		if(input == null || input.length()<3) {
			return;
		}
		
        ArrayList<Integer> result = new ArrayList<>();
        String output = "";

		GFG o1 = new GFG();
		result = o1.processRequest(input);
		
        GFG o1 = new GFG();
        Map<Integer, String> patHash = new HashMap<>();
        Map<String, Integer> patCode = new HashMap<>();
        patHash.put(o1.getHash(pat1, pat1.length()), pat1);
        patHash.put(o1.getHash(pat2, pat2.length()), pat2);
        patCode.put(pat1, patCode1);
        patCode.put(pat2, patCode2);
        
        result =  o1.search(request.getParameter("data").toString(), patHash, patCode);
        for(Integer code : result) {
        	output += code.toString();
        }
		response.getWriter().append(output);
	}

}
